#!/usr/bin/env python3
import os
import re
import sys
import argparse

def pad_numbers_in_name(name, pad_length):
    # Function to pad each number in the match to the specified length
    def pad_number(match):
        number = int(match.group(0))  # Convert matched string to integer
        return f"{number:0{pad_length}d}"  # Pad with zeros to pad_length

    # Find all numbers in the name and pad them
    new_name = re.sub(r'\d+', pad_number, name)
    return new_name

def main():
    # Parse command-line arguments
    parser = argparse.ArgumentParser(description="Pad numbers in file and directory names with zeros to specified length.")
    parser.add_argument("pad_length", type=int, help="Number of digits to pad numbers to")
    args = parser.parse_args()

    # Validate pad_length
    if args.pad_length < 1:
        print("Error: pad_length must be a positive integer")
        sys.exit(1)

    pad_length = args.pad_length

    # Get all entries (files and directories) in the current directory
    for name in os.listdir('.'):
        # Get the new name with padded numbers
        new_name = pad_numbers_in_name(name, pad_length)

        # If the name changed, rename the file or directory
        if new_name != name:
            try:
                os.rename(name, new_name)
                print(f"Renamed {name} to {new_name}")
            except OSError as e:
                print(f"Error renaming {name}: {e}")

if __name__ == "__main__":
    main()
